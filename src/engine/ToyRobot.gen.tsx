/* TypeScript file generated by genType. */

// tslint:disable-next-line:no-var-requires
const Curry = require('bs-platform/lib/es6/curry.js');

// tslint:disable-next-line:no-var-requires
const ToyRobotBS = require('./ToyRobot.bs');

// tslint:disable-next-line:interface-over-type-literal
export type Robot_t = { east: number; north: number };

export const Robot_make: (_1:{ readonly east: number; readonly north: number }) => Robot_t = function (Arg1: any) {
  const result = Curry._2(ToyRobotBS.Robot[0], Arg1.east, Arg1.north);
  return {east:result[0], north:result[1]}
};

export const Robot_moveEast: (_1:Robot_t) => Robot_t = function (Arg1: any) {
  const result = ToyRobotBS.Robot[1]([Arg1.east, Arg1.north]);
  return {east:result[0], north:result[1]}
};

export const Robot_moveWest: (_1:Robot_t) => Robot_t = function (Arg1: any) {
  const result = ToyRobotBS.Robot[2]([Arg1.east, Arg1.north]);
  return {east:result[0], north:result[1]}
};

export const Robot_moveNorth: (_1:Robot_t) => Robot_t = function (Arg1: any) {
  const result = ToyRobotBS.Robot[3]([Arg1.east, Arg1.north]);
  return {east:result[0], north:result[1]}
};

export const Robot_moveSouth: (_1:Robot_t) => Robot_t = function (Arg1: any) {
  const result = ToyRobotBS.Robot[4]([Arg1.east, Arg1.north]);
  return {east:result[0], north:result[1]}
};
